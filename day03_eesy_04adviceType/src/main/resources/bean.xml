<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

        <!--配置spring的Ioc把service对象配置进来-->
    <bean id="accountService" class="xin.shenheng.service.impl.AccountServiceImpl"></bean>



    <!--配置logger类-->
    <bean id="logger" class="xin.shenheng.utils.Logger"></bean>
    <!--配置aop-->
    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* xin.shenheng.service.impl.*.*(..))"></aop:pointcut>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置前置通知
            <aop:before method="beforePrintLog" pointcut="execution(* xin.shenheng.service.impl.*.*(..))"></aop:before>

            后置通知
            <aop:after-returning method="afterReturningPrintLog" pointcut="execution(* xin.shenheng.service.impl.*.*(..))"></aop:after-returning>-->

            <!--配置异常通知
            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"></aop:after-throwing>-->

            <!--配置最终通知
            <aop:after method="afterPrintLog" pointcut-ref="pt1"></aop:after>-->

            
            
            
            <!--配置环绕通知-->
            <aop:around method="aroundPringLog" pointcut-ref="pt1"></aop:around>
        </aop:aspect>
    </aop:config>
</beans>